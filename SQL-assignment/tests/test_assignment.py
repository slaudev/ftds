import datetime
import pytest
from db_config import connect_to_db
from solution import retrieve_patient_names_and_genders, list_all_doctors_and_specialties, \
get_insurance_policies_for_patient, find_appointments_for_patient, list_all_diagnosed_diseases, \
get_patients_prescribed_specific_medication, count_appointments_per_doctor, list_patients_with_claims, \
generate_lab_tests_report, most_common_procedure, find_doctors_with_overlapping_appointments, \
find_active_patient_insurance_policies

def test_retrieve_patient_names_and_genders():
    result = retrieve_patient_names_and_genders()
    expected = [('Alice Green', 'Female'), ('Bob Blue', 'Male'), ('Carol White', 'Female'), ('Amanda Miller', 'Female'), ('Amanda Davis', 'Female'), ('John Miller', 'Male'), ('Sarah Jones', 'Female'), ('Michael Hernandez', 'Female'), ('Ashley Jones', 'Male'), ('David Hernandez', 'Female'), ('James Hernandez', 'Other'), ('Ashley Rodriguez', 'Male'), ('Emily Hernandez', 'Female'), ('Jessica Garcia', 'Female'), ('Jessica Martinez', 
'Female'), ('James Jones', 'Male'), ('Michael Garcia', 'Female'), ('James Johnson', 'Male')]
    assert result == expected

def test_list_all_doctors_and_specialties():
    result = list_all_doctors_and_specialties()
    expected = [('Dr. John Smith', 'Cardiologist'), ('Dr. Emily Davis', 'Neurologist'), ('Dr. Michael Brown', 'Orthopedic Surgeon'), ('Dr. Sarah Johnson', 'Pediatrician'), ('Dr. William Lee', 'Radiologist'), ('Jessica Taylor', 'Oncologist'), ('Michael Wilson', 'Gastroenterologist'), ('Sarah Davis', 'Dermatologist'), ('Jessica Johnson', 'Endocrinologist'), ('John Moore', 'Ophthalmologist'), ('John Taylor', 'Obstetrician/Gynecologist'), ('John Taylor', 'Nephrologist'), ('Robert Brown', 'Urologist'), ('Emily Johnson', 'Pulmonologist'), ('Jessica Taylor', 'Rheumatologist')]  # Replace with expected output
    assert result == expected

def test_get_insurance_policies_for_patient():
    result = get_insurance_policies_for_patient(patient_id=5)
    expected = [('POL175978', datetime.date(2022, 7, 21), datetime.date(2023, 11, 1)), ('POL327325', datetime.date(2022, 6, 13), datetime.date(2023, 12, 14)), ('POL795195', datetime.date(2022, 4, 6), datetime.date(2023, 11, 
24)), ('POL465427', datetime.date(2022, 5, 4), datetime.date(2023, 9, 21)), ('POL362492', datetime.date(2022, 9, 5), datetime.date(2023, 3, 20)), ('POL129750', datetime.date(2022, 5, 28), datetime.date(2023, 12, 18)), ('POL143260', datetime.date(2022, 12, 31), datetime.date(2023, 1, 6)), ('POL783528', datetime.date(2022, 2, 20), datetime.date(2023, 9, 12)), ('POL359125', datetime.date(2022, 11, 12), datetime.date(2023, 2, 12)), ('POL712496', datetime.date(2022, 1, 15), datetime.date(2023, 10, 8)), ('POL214928', datetime.date(2022, 7, 2), datetime.date(2023, 8, 11))]  # Replace with expected output
    assert result == expected

def test_find_appointments_for_patient():
    result = find_appointments_for_patient(patient_id=4)
    expected = [(datetime.date(2023, 8, 19), datetime.timedelta(seconds=55140), 'Follow-up', 'Robert Brown'), (datetime.date(2023, 4, 14), datetime.timedelta(seconds=32820), 'Follow-up', 'Dr. John Smith'), (datetime.date(2023, 9, 21), datetime.timedelta(seconds=32760), 'Follow-up', 'Dr. Sarah Johnson'), (datetime.date(2023, 11, 26), datetime.timedelta(seconds=60120), 'Follow-up', 'John Moore'), (datetime.date(2023, 12, 28), datetime.timedelta(seconds=38880), 'Follow-up', 'Jessica Johnson'), (datetime.date(2023, 3, 8), datetime.timedelta(seconds=49260), 'Follow-up', 'Dr. John Smith'), (datetime.date(2023, 3, 17), datetime.timedelta(seconds=32940), 'Follow-up', 'Sarah Davis'), (datetime.date(2023, 2, 5), datetime.timedelta(seconds=55260), 'Follow-up', 'Michael Wilson'), (datetime.date(2023, 1, 8), datetime.timedelta(seconds=34260), 'Follow-up', 'Jessica Taylor'), (datetime.date(2023, 1, 8), datetime.timedelta(seconds=49440), 'Follow-up', 'Dr. John Smith'), (datetime.date(2023, 6, 7), datetime.timedelta(seconds=45540), 'Follow-up', 'Dr. Michael Brown'), (datetime.date(2023, 3, 9), datetime.timedelta(seconds=34500), 'Follow-up', 'Sarah Davis'), (datetime.date(2023, 6, 24), datetime.timedelta(seconds=45840), 'Routine', 'Michael Wilson'), (datetime.date(2023, 10, 31), datetime.timedelta(seconds=40560), 'Routine', 'Jessica Taylor'), (datetime.date(2023, 1, 25), datetime.timedelta(seconds=58800), 'Consultation', 'Emily Johnson'), (datetime.date(2023, 4, 1), datetime.timedelta(seconds=46500), 'Emergency', 'Jessica Johnson'), (datetime.date(2023, 12, 2), datetime.timedelta(seconds=46680), 'Checkup', 'Dr. John Smith'), (datetime.date(2023, 5, 22), datetime.timedelta(seconds=52380), 'Emergency', 'Dr. William Lee'), (datetime.date(2023, 5, 3), datetime.timedelta(seconds=55860), 'Consultation', 'Dr. Michael Brown'), (datetime.date(2023, 2, 22), datetime.timedelta(seconds=41940), 'Follow-up', 'Jessica Taylor'), (datetime.date(2023, 2, 13), datetime.timedelta(seconds=35460), 'Follow-up', 'Michael Wilson'), (datetime.date(2023, 1, 26), datetime.timedelta(seconds=47460), 'Consultation', 'John Taylor'), (datetime.date(2023, 5, 4), datetime.timedelta(seconds=39300), 'Follow-up', 'Dr. John Smith'), (datetime.date(2023, 11, 29), datetime.timedelta(seconds=48060), 'Emergency', 'Dr. William Lee'), (datetime.date(2023, 3, 4), datetime.timedelta(seconds=48000), 'Consultation', 'Dr. Michael Brown')]  # Replace with expected output
    assert result == expected

def test_list_all_diagnosed_diseases():
    result = list_all_diagnosed_diseases()
    expected = [('Alice Green', 'Cholera', datetime.date(2023, 1, 20)), ('Bob Blue', 'Herpes Simplex', datetime.date(2023, 8, 24)), ('Carol White', 'Malignant neoplasms', datetime.date(2023, 2, 20)), ('Amanda Miller', 'Vitamin deficiency', datetime.date(2023, 11, 29)), ('James Jones', 'Herpes Simplex', datetime.date(2023, 3, 14)), ('Amanda Miller', 'Herpes Simplex', datetime.date(2023, 10, 31)), ('David Hernandez', 'Diabetes', datetime.date(2023, 7, 26)), ('Amanda Miller', 'Malignant neoplasms', datetime.date(2023, 1, 26)), ('Emily Hernandez', 'Malignant neoplasms', datetime.date(2023, 6, 24)), ('Ashley Rodriguez', 'Diabetes', datetime.date(2023, 7, 13)), ('James Johnson', 'Vitamin deficiency', datetime.date(2023, 3, 18)), ('Alice Green', 'Cholera', datetime.date(2023, 10, 22)), ('Carol White', 'Diabetes', datetime.date(2023, 2, 20)), ('Amanda Davis', 'Cholera', datetime.date(2023, 3, 31)), ('Carol White', 'Vitamin deficiency', datetime.date(2023, 5, 19)), ('Michael Garcia', 'Diabetes', datetime.date(2023, 3, 17)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 12, 8)), ('Michael Garcia', 'Cholera', datetime.date(2023, 1, 26)), ('Michael Hernandez', 'Vitamin deficiency', datetime.date(2023, 9, 13)), ('James Hernandez', 'Cholera', datetime.date(2023, 7, 19)), ('Amanda Miller', 'Diabetes', datetime.date(2023, 10, 31)), ('John Miller', 'Diabetes', datetime.date(2023, 8, 31)), ('Bob Blue', 'Vitamin deficiency', datetime.date(2023, 2, 13)), ('James Johnson', 'Cholera', datetime.date(2023, 11, 17)), ('Jessica Martinez', 'Vitamin deficiency', datetime.date(2023, 2, 2)), ('James Jones', 'Herpes Simplex', datetime.date(2023, 10, 5)), ('Emily Hernandez', 'Cholera', datetime.date(2023, 7, 22)), ('Ashley Rodriguez', 'Herpes Simplex', datetime.date(2023, 4, 4)), ('Carol White', 'Diabetes', datetime.date(2023, 11, 24)), ('James Jones', 'Malignant neoplasms', datetime.date(2023, 3, 8)), ('David Hernandez', 'Vitamin deficiency', datetime.date(2023, 3, 18)), ('John Miller', 'Diabetes', datetime.date(2023, 3, 19)), ('Bob Blue', 'Malignant neoplasms', datetime.date(2023, 7, 2)), ('John Miller', 'Malignant neoplasms', datetime.date(2023, 11, 26)), ('Sarah Jones', 'Diabetes', datetime.date(2023, 4, 21)), ('James Johnson', 'Vitamin deficiency', datetime.date(2023, 8, 20)), ('Jessica Garcia', 'Cholera', datetime.date(2023, 3, 6)), ('Amanda Davis', 'Cholera', datetime.date(2023, 10, 14)), ('James Johnson', 'Malignant neoplasms', datetime.date(2023, 7, 1)), ('Jessica Martinez', 'Cholera', datetime.date(2023, 11, 21)), ('Ashley Jones', 'Herpes Simplex', datetime.date(2023, 11, 3)), ('Ashley Rodriguez', 'Vitamin deficiency', datetime.date(2023, 12, 17)), ('James Johnson', 'Diabetes', datetime.date(2023, 3, 3)), ('Michael Garcia', 'Malignant neoplasms', datetime.date(2023, 11, 6)), ('James Johnson', 'Herpes Simplex', datetime.date(2023, 8, 21)), ('Emily Hernandez', 'Cholera', datetime.date(2023, 1, 6)), ('Ashley Rodriguez', 'Diabetes', datetime.date(2023, 3, 6)), ('Michael Garcia', 'Diabetes', datetime.date(2023, 12, 4)), ('James Johnson', 'Diabetes', datetime.date(2023, 4, 15)), ('Emily Hernandez', 'Diabetes', datetime.date(2023, 12, 16)), ('Jessica Garcia', 'Malignant neoplasms', datetime.date(2023, 8, 24)), ('Michael Hernandez', 'Cholera', datetime.date(2023, 6, 29)), ('James Jones', 'Malignant neoplasms', datetime.date(2023, 8, 24)), ('John Miller', 'Diabetes', datetime.date(2023, 6, 10)), ('Sarah Jones', 'Diabetes', datetime.date(2023, 2, 10)), ('Bob Blue', 'Diabetes', datetime.date(2023, 5, 12)), ('David Hernandez', 'Cholera', datetime.date(2023, 10, 19)), ('Sarah Jones', 'Vitamin deficiency', datetime.date(2023, 1, 11)), ('Bob Blue', 'Malignant neoplasms', datetime.date(2023, 11, 16)), ('Ashley Jones', 'Malignant neoplasms', datetime.date(2023, 11, 13)), ('Bob Blue', 'Diabetes', datetime.date(2023, 4, 11)), ('Amanda Davis', 'Cholera', datetime.date(2023, 8, 8)), ('James Hernandez', 'Malignant neoplasms', datetime.date(2023, 10, 22)), ('Carol White', 'Herpes Simplex', datetime.date(2023, 2, 4)), ('James Jones', 'Vitamin deficiency', datetime.date(2023, 3, 24)), ('Emily Hernandez', 'Cholera', datetime.date(2023, 11, 4)), ('Jessica Garcia', 'Malignant neoplasms', datetime.date(2023, 5, 28)), ('Amanda Miller', 'Herpes Simplex', datetime.date(2023, 5, 3)), ('Michael Garcia', 'Diabetes', datetime.date(2023, 2, 10)), ('David Hernandez', 'Vitamin deficiency', datetime.date(2023, 9, 22)), ('Ashley Jones', 'Vitamin deficiency', datetime.date(2023, 8, 4)), ('James Johnson', 'Cholera', datetime.date(2023, 6, 19)), ('Emily Hernandez', 'Herpes Simplex', datetime.date(2023, 12, 16)), ('Amanda Davis', 'Diabetes', datetime.date(2023, 2, 22)), ('Bob Blue', 'Cholera', datetime.date(2023, 11, 27)), ('Ashley Rodriguez', 'Malignant neoplasms', datetime.date(2023, 7, 14)), ('James Jones', 'Herpes Simplex', datetime.date(2023, 2, 27)), ('James Hernandez', 'Malignant neoplasms', datetime.date(2023, 11, 25)), ('James Johnson', 'Diabetes', datetime.date(2023, 8, 31)), ('James Jones', 'Herpes Simplex', datetime.date(2023, 10, 5)), ('Michael Garcia', 'Herpes Simplex', datetime.date(2023, 10, 9)), ('Sarah Jones', 'Cholera', datetime.date(2023, 5, 1)), ('John Miller', 'Diabetes', datetime.date(2023, 11, 3)), ('Carol White', 'Vitamin deficiency', datetime.date(2023, 5, 25)), ('John Miller', 'Diabetes', datetime.date(2023, 8, 21)), ('Amanda Davis', 'Malignant neoplasms', datetime.date(2023, 3, 31)), ('Jessica Garcia', 'Herpes Simplex', datetime.date(2023, 7, 4)), ('James Hernandez', 'Cholera', datetime.date(2023, 3, 19)), ('Sarah Jones', 'Malignant neoplasms', datetime.date(2023, 4, 21)), ('Ashley \
Rodriguez', 'Malignant neoplasms', datetime.date(2023, 2, 12)), ('Amanda Miller', 'Vitamin deficiency', datetime.date(2023, 3, 8)), ('Amanda Miller', 'Diabetes', datetime.date(2023, 2, 22)), ('Carol White', 'Vitamin deficiency', datetime.date(2023, 10, 4)), ('Jessica Garcia', 'Herpes Simplex', datetime.date(2023, 5, 2)), ('James Hernandez', 'Herpes Simplex', datetime.date(2023, 4, 17)), ('James Johnson', 'Vitamin deficiency', datetime.date(2023, 11, 17)), ('Alice Green', 'Vitamin deficiency', datetime.date(2023, 5, 26)), ('Amanda Davis', 'Vitamin deficiency', datetime.date(2023, 6, 7)), ('Ashley Jones', 'Vitamin deficiency', datetime.date(2023, 5, 11)), ('Bob Blue', 'Vitamin deficiency', datetime.date(2023, 8, 20)), ('James Johnson', 'Malignant neoplasms', datetime.date(2023, 10, 18)), ('Sarah Jones', 'Herpes Simplex', datetime.date(2023, 2, 20)), ('James Jones', 'Herpes Simplex', datetime.date(2023, 10, 5)), ('Ashley Rodriguez', 'Herpes Simplex', datetime.date(2023, 3, 6)), ('Bob Blue', 'Malignant neoplasms', datetime.date(2023, 10, 9)), ('Bob Blue', 'Diabetes', datetime.date(2023, 1, 2)), ('Jessica Garcia', 'Diabetes', datetime.date(2023, 9, 4)), ('James Johnson', 'Vitamin deficiency', datetime.date(2023, 11, 23)), ('David Hernandez', 'Cholera', datetime.date(2023, 4, 9)), ('Emily Hernandez', 'Cholera', datetime.date(2023, 11, 3)), ('Emily Hernandez', 'Vitamin deficiency', datetime.date(2023, 7, 5)), ('Emily Hernandez', 'Vitamin deficiency', datetime.date(2023, 9, 28)), ('Amanda Miller', 'Malignant neoplasms', datetime.date(2023, 5, 3)), ('James Johnson', 'Diabetes', datetime.date(2023, 3, 3)), ('Michael Garcia', 'Cholera', datetime.date(2023, 2, 16)), ('John Miller', 'Vitamin deficiency', datetime.date(2023, 7, 17)), ('James Johnson', 'Herpes Simplex', datetime.date(2023, 12, 3)), ('Michael Hernandez', 'Cholera', datetime.date(2023, 1, 13)), ('James Johnson', 'Malignant neoplasms', datetime.date(2023, 6, 23)), ('James Johnson', 'Malignant neoplasms', datetime.date(2023, 12, 7)), ('Jessica Martinez', 'Vitamin deficiency', datetime.date(2023, 4, 8)), ('Alice Green', 'Malignant neoplasms', datetime.date(2023, 3, 25)), ('Bob Blue', 'Diabetes', datetime.date(2023, 12, 24)), ('Jessica Garcia', 'Malignant neoplasms', datetime.date(2023, 10, 28)), ('Michael Hernandez', 'Vitamin deficiency', datetime.date(2023, 10, 1)), ('Ashley Rodriguez', 'Diabetes', datetime.date(2023, 3, 6)), ('John Miller', 'Malignant neoplasms', datetime.date(2023, 3, 30)), ('Bob Blue', 'Cholera', datetime.date(2023, 11, 7)), ('Ashley Rodriguez', 'Vitamin deficiency', datetime.date(2023, 12, 30)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 8, 21)), ('James Hernandez', 'Herpes Simplex', datetime.date(2023, 3, 24)), ('Amanda Davis', 'Herpes Simplex', datetime.date(2023, 2, 7)), ('Alice Green', 'Malignant neoplasms', datetime.date(2023, 4, 11)), ('Sarah Jones', 'Herpes Simplex', datetime.date(2023, 
2, 20)), ('Sarah Jones', 'Cholera', datetime.date(2023, 6, 11)), ('James Johnson', 'Diabetes', datetime.date(2023, 11, 21)), ('Amanda Miller', 'Herpes Simplex', datetime.date(2023, 2, 13)), ('James Jones', 'Cholera', datetime.date(2023, 2, 27)), ('Amanda Davis', 'Malignant neoplasms', datetime.date(2023, 12, 20)), ('Alice Green', 'Diabetes', datetime.date(2023, 9, 23)), ('Emily Hernandez', 'Cholera', datetime.date(2023, 12, 16)), ('James Johnson', 'Cholera', datetime.date(2023, 8, 20)), ('Emily Hernandez', 'Malignant neoplasms', datetime.date(2023, 7, 22)), ('Alice Green', 'Cholera', datetime.date(2023, 5, 26)), ('Alice Green', 'Cholera', datetime.date(2023, 9, 18)), ('Amanda Davis', 'Diabetes', datetime.date(2023, 7, 21)), ('Carol White', 'Diabetes', datetime.date(2023, 2, 4)), ('David Hernandez', 'Diabetes', datetime.date(2023, 1, 8)), ('Michael Garcia', 'Cholera', datetime.date(2023, 2, 16)), ('Alice Green', 'Cholera', datetime.date(2023, 3, 23)), ('Emily Hernandez', 'Herpes Simplex', datetime.date(2023, 7, 22)), ('James Johnson', 'Cholera', datetime.date(2023, 8, 20)), ('Ashley Rodriguez', 'Herpes Simplex', datetime.date(2023, 7, 28)), ('Jessica Garcia', 'Vitamin deficiency', datetime.date(2023, 3, 16)), ('Jessica Garcia', 'Cholera', datetime.date(2023, 9, 4)), ('Amanda Davis', 'Herpes Simplex', datetime.date(2023, 12, 7)), ('Amanda Miller', 'Vitamin deficiency', datetime.date(2023, 2, 13)), ('James Hernandez', 'Diabetes', datetime.date(2023, 11, 12)), ('Sarah Jones', 'Diabetes', datetime.date(2023, 5, 3)), ('Ashley Jones', 'Herpes Simplex', datetime.date(2023, 9, 27)), ('Michael Garcia', 'Vitamin deficiency', datetime.date(2023, 6, 26)), ('Emily Hernandez', 'Malignant neoplasms', datetime.date(2023, 11, 4)), ('James Johnson', 'Malignant neoplasms', datetime.date(2023, 7, 30)), ('Michael Hernandez', 'Diabetes', datetime.date(2023, 11, 24)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 11, 26)), ('James Hernandez', 'Cholera', datetime.date(2023, 4, 14)), ('Bob Blue', 'Malignant neoplasms', datetime.date(2023, 2, 27)), ('David Hernandez', 'Diabetes', datetime.date(2023, 12, 1)), ('Ashley Rodriguez', 'Vitamin deficiency', datetime.date(2023, 3, 6)), ('Emily Hernandez', 'Herpes Simplex', datetime.date(2023, 6, 16)), ('Michael Hernandez', 'Vitamin deficiency', datetime.date(2023, 5, 12)), ('Amanda Miller', 'Cholera', datetime.date(2023, 6, 7)), ('Jessica Martinez', 'Herpes Simplex', datetime.date(2023, 3, 24)), ('Bob Blue', 'Vitamin deficiency', datetime.date(2023, 11, 27)), ('Jessica Garcia', 'Herpes Simplex', datetime.date(2023, 8, 24)), ('James Hernandez', 'Vitamin deficiency', datetime.date(2023, 9, 17)), ('John Miller', 'Diabetes', datetime.date(2023, 1, 22)), ('Emily Hernandez', 'Malignant neoplasms', datetime.date(2023, 8, 23)), ('John Miller', 'Malignant neoplasms', datetime.date(2023, 11, 3)), ('James Jones', 'Cholera', datetime.date(2023, 2, 8)), ('Bob Blue', 'Diabetes', datetime.date(2023, 11, 10)), ('Carol White', 'Vitamin deficiency', datetime.date(2023, 10, 4)), ('Amanda Davis', 'Herpes Simplex', datetime.date(2023, 1, 8)), ('Bob Blue', 'Vitamin deficiency', datetime.date(2023, 2, 27)), ('John Miller', 'Malignant neoplasms', datetime.date(2023, 5, 20)), ('Amanda Davis', 'Cholera', datetime.date(2023, 12, 2)), ('James Johnson', 'Diabetes', datetime.date(2023, 3, 
4)), ('David Hernandez', 'Vitamin deficiency', datetime.date(2023, 7, 26)), ('Emily Hernandez', 'Herpes Simplex', datetime.date(2023, 3, 15)), ('Michael Hernandez', 'Herpes Simplex', datetime.date(2023, 11, 24)), ('Jessica Garcia', 'Vitamin deficiency', datetime.date(2023, 10, 28)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 11, 3)), ('James Jones', 'Malignant neoplasms', datetime.date(2023, 5, 12)), ('James Jones', 'Cholera', datetime.date(2023, 3, 14)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 12, 8)), ('Jessica Garcia', 'Diabetes', datetime.date(2023, 12, 11)), ('David Hernandez', 'Vitamin deficiency', datetime.date(2023, 10, 10)), ('Jessica Garcia', 'Vitamin deficiency', datetime.date(2023, 2, 15)), ('Bob Blue', 'Diabetes', datetime.date(2023, 11, 7)), ('James Jones', 'Cholera', datetime.date(2023, 10, 5)), ('Bob Blue', 'Vitamin deficiency', datetime.date(2023, 7, 2)), ('Bob Blue', 'Malignant neoplasms', datetime.date(2023, 10, 9)), ('John Miller', 'Herpes Simplex', datetime.date(2023, 7, 17))]   # Replace with expected output
    assert result == expected

def test_get_patients_prescribed_specific_medication():
    result = get_patients_prescribed_specific_medication(medication_id=12)
    expected = [('Emily Hernandez', '290mg', datetime.date(2023, 12, 23), datetime.date(2023, 2, 28)), ('Ashley Rodriguez', '474mg', datetime.date(2023, 11, 27), datetime.date(2023, 8, 29)), ('James Hernandez', '465mg', datetime.date(2023, 5, 16), datetime.date(2023, 12, 18)), ('Jessica Martinez', '391mg', datetime.date(2023, 1, 11), datetime.date(2023, 4, 21)), ('Ashley Rodriguez', '336mg', datetime.date(2023, 11, 22), datetime.date(2023, 4, 6)), ('Amanda Davis', '164mg', datetime.date(2023, 7, 26), datetime.date(2023, 12, 14)), ('Ashley Rodriguez', '395mg', datetime.date(2023, 3, 25), datetime.date(2023, 12, 8))]  # Replace with expected output
    assert result == expected

def test_count_appointments_per_doctor():
    result = count_appointments_per_doctor()
    expected = [('Dr. John Smith', 'Cardiologist', 37), ('Jessica Johnson', 'Endocrinologist', 34), ('Dr. Sarah Johnson', 'Pediatrician', 29), ('John Taylor', 'Obstetrician/Gynecologist', 29), ('Emily Johnson', 'Pulmonologist', 29), ('Dr. Michael Brown', 'Orthopedic Surgeon', 28), ('John Moore', 'Ophthalmologist', 28), ('Dr. Emily Davis', 'Neurologist', 27), ('Jessica Taylor', 'Rheumatologist', 27), ('John Taylor', 'Nephrologist', 26), ('Michael Wilson', 'Gastroenterologist', 24), ('Robert Brown', 'Urologist', 24), ('Dr. William Lee', 'Radiologist', 22), ('Sarah Davis', 'Dermatologist', 21), ('Jessica Taylor', 'Oncologist', 18)]  # Replace with expected output
    assert result == expected

def test_list_patients_with_claims():
    result = list_patients_with_claims()
    expected = [('Alice Green', 7774.91552734375, 'Approved'), ('Alice Green', 21599.08953857422, 'Denied'), ('Alice Green', 15399.10791015625, 'Submitted'), ('Amanda Davis', 11546.021728515625, 'Approved'), ('Amanda Davis', 21806.19384765625, 'Denied'), ('Amanda Davis', 27378.939453125, 'Submitted'), ('Amanda Miller', 26218.103515625, 'Approved'), ('Amanda Miller', 16035.736328125, 'Denied'), ('Amanda Miller', 5467.33544921875, 
'Submitted'), ('Ashley Jones', 23909.123291015625, 'Approved'), ('Ashley Jones', 8572.7783203125, 'Denied'), ('Ashley Jones', 14894.409912109375, 'Submitted'), ('Ashley Rodriguez', 16798.085693359375, 'Approved'), ('Ashley Rodriguez', 9317.475708007812, 'Denied'), ('Ashley Rodriguez', 13740.51318359375, 'Submitted'), ('Bob Blue', 29674.34521484375, 'Approved'), ('Bob Blue', 16132.0986328125, 'Denied'), ('Bob Blue', 30787.916748046875, 'Submitted'), ('Carol White', 13404.23486328125, 'Approved'), ('Carol White', 34416.56362915039, 'Denied'), ('Carol White', 16015.086730957031, 'Submitted'), ('David Hernandez', 13676.38916015625, 'Approved'), ('David Hernandez', 33239.96435546875, 'Denied'), ('David Hernandez', 22040.0869140625, 'Submitted'), ('Emily Hernandez', 14214.71304321289, 'Approved'), ('Emily Hernandez', 5209.96533203125, 'Denied'), ('Emily Hernandez', 4841.1982421875, 'Submitted'), ('James Hernandez', 12922.701965332031, 'Approved'), ('James Hernandez', 25696.19482421875, 'Denied'), ('James Hernandez', 9822.573364257812, 
'Submitted'), ('James Johnson', 15844.828857421875, 'Approved'), ('James Johnson', 26533.04248046875, 'Denied'), ('James Johnson', 21411.083862304688, 'Submitted'), ('James Jones', 22224.760375976562, 'Approved'), ('James Jones', 39420.066162109375, 'Denied'), ('James Jones', 5813.995849609375, 'Submitted'), ('Jessica Garcia', 45164.53749084473, 'Approved'), ('Jessica Garcia', 24727.43994140625, 'Denied'), ('Jessica Garcia', 20654.22119140625, 'Submitted'), ('Jessica Martinez', 5118.705078125, 'Approved'), ('Jessica Martinez', 10696.899658203125, 'Denied'), ('Jessica Martinez', 5011.044006347656, 'Submitted'), ('John Miller', 56612.543884277344, 'Approved'), ('John Miller', 32294.440185546875, 'Denied'), ('John Miller', 3457.025390625, 'Submitted'), ('Michael Garcia', 15634.35791015625, 'Approved'), ('Michael Garcia', 34819.96026611328, 'Denied'), ('Michael Garcia', 14731.6982421875, 'Submitted'), ('Michael Hernandez', 11331.410278320312, 'Approved'), ('Michael Hernandez', 8548.52685546875, 'Denied'), ('Michael Hernandez', 35823.014892578125, 'Submitted'), ('Sarah Jones', 28618.048828125, 'Approved'), ('Sarah Jones', 10052.976013183594, 'Denied'), ('Sarah Jones', 18020.2978515625, 'Submitted')]  # Replace with expected output
    assert result == expected


def test_generate_lab_tests_report():
    result = generate_lab_tests_report()
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute("""
    SELECT p.PatientName, lt.LabTestName, plt.Result 
    FROM patient_lab_tests plt 
    JOIN patients p ON plt.PatientID = p.PatientID 
    JOIN lab_tests lt ON plt.LabTestID = lt.LabTestID 
    WHERE plt.OrderedDate >= CURDATE() - INTERVAL 30 DAY;
    """)
    expected = cursor.fetchall()
    cursor.close()
    connection.close()
    assert result == expected

def test_most_common_procedure():
    result = most_common_procedure()
    expected = [('Endoscopy', 80)]  # Replace with expected output
    assert result == expected

def test_find_doctors_with_overlapping_appointments():
    result = find_doctors_with_overlapping_appointments()
    expected = [(5, 'Dr. William Lee', 8, datetime.date(2023, 1, 6), datetime.timedelta(seconds=39000), 16, datetime.date(2023, 1, 6), datetime.timedelta(seconds=39540)), (12, 'John Taylor', 328, datetime.date(2023, 2, 3), datetime.timedelta(seconds=51540), 239, datetime.date(2023, 2, 3), datetime.timedelta(seconds=53040))]  # Replace with expected output
    assert result == expected

def test_find_active_patient_insurance_policies():
    result = find_active_patient_insurance_policies()
    expected = []  # Replace with expected output
    assert result == expected

